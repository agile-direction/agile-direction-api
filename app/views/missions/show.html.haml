- progress = @mission.status
- total_time = progress.values.sum
- if total_time > 0
  .progress
    - progress.each do |(status, time)|
      - percent = (time.fdiv(total_time) * 100)
      %div{ class: "progress-#{status}" }
        .progress-description= status
        .progress-bar{ class: status, "data-percent" => percent  }

%section
  .right= link_to(t("actions.edit"), edit_mission_path(@mission))

  %h2
    = @mission.name
    - if @mission.parent
      %br
      %span.subnote
        - link = link_to(@mission.parent.name, mission_path(@mission.parent))
        = t(".clone.from_html", { link: link })
    - if @mission.clones.any?
      %span.subnote
        = t(".clone.total", { count: @mission.clones.count })

  %p
    = @mission.description

  - total_time = 0
  - if @mission.deliverables.any?
    %ul#deliverables{ "data-id" => @mission.id }
      - @mission.deliverables.each do |deliverable|
        - expandClass = (deliverable.requirements.any? && deliverable.requirements.all?(&:completed?)) ? 'collapsed' : ''
        %li.deliverable.expandable{ class: expandClass, id: deliverable.to_param, "data-id" => deliverable.id }
          %span.deliverable_handle= t("icons.handle_html")
          = link_to(deliverable.name, edit_mission_deliverable_path(@mission, deliverable))
          = link_to(t("icons.expand.down_html"), "#", { class: "expand", title: t("icons.expand.title_html") })
          = link_to(t("icons.collapse.up_html"), "#", { class: "collapse", title: t("icons.collapse.title_html") })
          %span.subnote= deliverable.value
          %ul.requirements.expandee{ "data-id" => deliverable.id }
            - deliverable.requirements.each do |requirement|
              - unless requirement.completed?
                - total_time += requirement.estimate.to_i
              %li.requirement{ id: requirement.to_param, "data-id" => requirement.id, "data-estimate" => requirement.estimate, "data-state" => requirement.status }
                %span.requirement_handle= t("icons.handle_html")
                = link_to(requirement.name, edit_mission_deliverable_requirement_path(@mission,deliverable, requirement), { class: "inline" })
                - if requirement.created?
                  - path = mission_deliverable_requirement_path(@mission, deliverable, requirement, { requirement: { status: Requirement::STATUSES[:started] } })
                  - text = t(".requirement.start_html", { icon: t("icons.ready_html") })
                  = link_to(text, path, { method: :put, title: "Start" })
                - elsif requirement.started?
                  - path = mission_deliverable_requirement_path(@mission, deliverable, requirement, { requirement: { status: Requirement::STATUSES[:completed] } })
                  - text = t(".requirement.finish_html", { icon: t("icons.actioning_html") })
                  = link_to(text, path, method: :put, title: "Finish")
                - unless requirement.description.blank?
                  %br
                  %span.requirement-description= requirement.description
            %span.timestop
              - count = total_time.fdiv(7).ceil
              - count_tag = content_tag(:span, count, { class: "count" })
              = t(".timestop_html", { number_of_weeks: count_tag, count: count })
            = link_to(new_mission_deliverable_requirement_path(@mission, deliverable), { title: t("missions.show.add-requirement") }) do
              = t("missions.show.add-requirement_html", { arrow: t("icons.arrow_html") })
  - else
    %p= t("missions.show.now-what_html", { mission_name: @mission.name })

  = link_to(new_mission_deliverable_path(@mission), { title: t("missions.show.add-deliverable") }) do
    = t("missions.show.add-deliverable_html", { arrow: t("icons.arrow_html") })

%section#participants
  %h3= t("missions.show.participants")

  %ul
    - @participants.each do |participant|
      %li
        = participant.user.name
        = link_to(t("icons.x_html"), mission_participant_path(@mission, participant), { method: :delete })

  = link_to(new_mission_participant_path(@mission), { title: t("missions.show.add-participant") }) do
    = t("missions.show.add-participant_html", { arrow: t("icons.arrow_html") })

%section#clone
  %h3= t(".clone.title")
  %p= t(".clone.description")
  - path = clone_mission_path(@mission)
  - options = { class: "action", method: :post }
  = link_to(t("actions.clone"), path, options)
