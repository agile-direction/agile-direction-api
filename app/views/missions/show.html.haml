- progress = @mission.status
- total_time = progress.values.sum
- if total_time > 0
  - progress.each do |(status, time)|
    - percent = (time.fdiv(total_time) * 100)
    .progress{ class: "progress-#{status}" }
      .progress-description= status
      .progress-bar{ class: status, "data-percent" => percent  }

%section
  .right= link_to(t("actions.edit"), edit_mission_path(@mission))

  %h2
    = @mission.name
    - if @mission.parent
      %br
      %span.subnote
        - link = link_to(@mission.parent.name, mission_path(@mission.parent))
        = t(".clone.from_html", { link: link })
    - if @mission.clones.any?
      %span.subnote
        = t(".clone.total", { count: @mission.clones.count })

  %p
    = @mission.description

  - total_time = 0
  - if @mission.deliverables.any?
    %ul#deliverables{ "data-id" => @mission.id }
      - @mission.deliverables.each do |deliverable|
        - is_completed = (deliverable.requirements.any? && deliverable.requirements.all?(&:completed?))
        - expandClass = is_completed ? 'collapsed' : ''
        %li.deliverable.expandable{ class: expandClass, id: deliverable.to_param, "data-id" => deliverable.id }
          - color_class = is_completed ? "colors work-completed" : "colors work"
          .focus-area.deliverable{ class: color_class, tabindex: -1 }
            %span.deliverable_handle= t("icons.handle_html")
            - options = { "data-command" => "c" }
            = link_to(deliverable.name, edit_mission_deliverable_path(@mission, deliverable), options)
            - title = t("icons.toggle-expand-title_html", { icon: t("icons.toggle-expand_html") })
            = link_to(t("icons.toggle-expand_html"), "#", { "data-command" => "space", class: "toggle-expand", title: title })
            %span.subnote= deliverable.value
          .expandee
            %ul.requirements{ "data-id" => deliverable.id }
              - deliverable.requirements.each do |requirement|
                - unless requirement.completed?
                  - total_time += requirement.estimate.to_i
                %li.requirement{ id: requirement.to_param, "data-id" => requirement.id, "data-estimate" => requirement.estimate, "data-state" => requirement.status }
                  - color_class = requirement.completed? ?  "colors work-completed" : "colors work"
                  .focus-area{ class: color_class, tabindex: -1 }
                    %span.requirement_handle= t("icons.handle_html")
                    - if requirement.created?
                      - path = mission_deliverable_requirement_path(@mission, deliverable, requirement, { requirement: { status: Requirement::STATUSES[:started] } })
                      - text = t(".requirement.start_html", { icon: t("icons.ready_html") })
                      = link_to(text, path, { "data-command" => "s", method: :put, class: "requirement-state", title: "Start" })
                    - elsif requirement.started?
                      - path = mission_deliverable_requirement_path(@mission, deliverable, requirement, { requirement: { status: Requirement::STATUSES[:completed] } })
                      - text = t(".requirement.finish_html", { icon: t("icons.actioning_html") })
                      = link_to(text, path, { "data-command" => "f", class: "requirement-state", method: :put, title: "Finish" })
                    - options = { "data-command" => "i" }
                    = link_to(requirement.name, edit_mission_deliverable_requirement_path(@mission,deliverable, requirement), options)
                    %span.superscript= requirement.estimate
                    - unless requirement.description.blank?
                      %br
                      %span.requirement-description= requirement.description
            - options = { "data-command" => "o", class: "add-requirement", title: t("missions.show.add-requirement") }
            = link_to(new_mission_deliverable_requirement_path(@mission, deliverable), options) do
              = t("missions.show.add-requirement_html", { arrow: t("icons.arrow_html") })

            %span.timestop
              - count = total_time.fdiv(7).ceil
              - count_tag = content_tag(:span, count, { class: "count" })
              = t(".timestop_html", { number_of_weeks: count_tag, count: count })

  - else
    %p= t("missions.show.now-what_html", { mission_name: @mission.name })

  - options = { "data-command" => "o", class: "add-deliverable", title: t("missions.show.add-deliverable") }
  = link_to(new_mission_deliverable_path(@mission), options) do
    = t("missions.show.add-deliverable_html", { arrow: t("icons.arrow_html") })

%section#participants
  %h3= t("missions.show.participants")

  %ul#participants
    - @participants.each do |participant|
      %li.participant
        = participant.user.name
        - options = { method: :delete, title: t("actions.delete") }
        = link_to(t("icons.x_html"), mission_participant_path(@mission, participant), options)

  = link_to(new_mission_participant_path(@mission), { title: t("missions.show.add-participant") }) do
    = t("missions.show.add-participant_html", { arrow: t("icons.arrow_html") })

%section#clone
  %h3= t(".clone.title")
  %p= t(".clone.description")
  - path = clone_mission_path(@mission)
  - options = { class: "action", method: :post }
  = link_to(t("actions.clone"), path, options)
